version: '3.4'

networks:
    backend:
        driver: bridge
services:
  identity.api:
    image: ${DOCKER_REGISTRY-}identityapi
    build:
      context: .
      dockerfile: Identity.API/Dockerfile
    container_name: identity.api
    ports:
        - 5001:8080 
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        # - ASPNETCORE_Kestrel__Certificates__Default__Password=SurgeousJP123
        # - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
        - ~/.aspnet/https:/https:ro
    networks:
        - backend
  bookcatalog.api:
    image: ${DOCKER_REGISTRY-}bookcatalogapi
    container_name: bookcatalog.api
    build:
      context: .
      dockerfile: BookCatalog.API/Dockerfile
    depends_on:
        - identity.api
    ports:
        - 5002:8080
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        # - ASPNETCORE_Kestrel__Certificates__Default__Password=SurgeousJP123
        # - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
        - ~/.aspnet/https:/https:ro
    networks:
        - backend
  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    container_name: basket.api
    build:
      context: .
      dockerfile: Basket.API/Dockerfile
    depends_on:
        - identity.api
    ports:
        - 5003:8080
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        # - ASPNETCORE_Kestrel__Certificates__Default__Password=SurgeousJP123
        # - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
        - ~/.aspnet/https:/https:ro
    networks:
        - backend
  webhost:
    image: ${DOCKER_REGISTRY-}webhost
    container_name: webhost
    ports:
        - 6001:8080
    build:
      context: .
      dockerfile: WebHost/Dockerfile
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        # - ASPNETCORE_Kestrel__Certificates__Default__Password=SurgeousJP123
        # - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
        - ~/.aspnet/https:/https:ro
    networks:
        - backend
